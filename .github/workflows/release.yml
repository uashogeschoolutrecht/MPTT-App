name: Build and Release MPPT-App (Windows & macOS)

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-windows:
    name: Build Windows EXE
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install system deps
        shell: bash
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements-win.txt

      - name: Build with PyInstaller
        shell: bash
        run: |
          pyinstaller --noconfirm pyinstaller-win.spec

  # Optional: Code-sign the EXE/DLLs (SmartScreen/Defender trust)
  # Configure one of the following before enabling:
  # 1) Azure Trusted Signing (recommended for CI)
  # 2) PFX certificate uploaded as an encrypted secret
  # After configuration, uncomment a signing step below.
  #
  # - name: Sign with Azure Trusted Signing
  #   uses: azure/trusted-signing-action@v0.5.0
  #   with:
  #     endpoint: ${{ secrets.AZURE_TRUSTED_SIGNING_ENDPOINT }}
  #     codeSigningAccountName: ${{ secrets.AZURE_TRUSTED_SIGNING_ACCOUNT }}
  #     certificateProfileName: ${{ secrets.AZURE_TRUSTED_SIGNING_PROFILE }}
  #     filesToSign: |
  #       dist/MPPT-App.exe
  #     description: MPPT-App
  #     descriptionUrl: https://github.com/uashogeschoolutrecht/MPTT-App
  #
  # - name: Sign with PFX and signtool
  #   if: false  # set to true when PFX secrets are set
  #   shell: pwsh
  #   run: |
  #     $pfxPath = "$env:RUNNER_TEMP\\codesign.pfx"
  #     [IO.File]::WriteAllBytes($pfxPath, [Convert]::FromBase64String("${{ secrets.CODESIGN_PFX_BASE64 }}"))
  #     & "C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x64\\signtool.exe" sign /f $pfxPath /p "${{ secrets.CODESIGN_PFX_PASSWORD }}" /tr http://timestamp.digicert.com /td sha256 /fd sha256 "dist/MPPT-App.exe"

      - name: Archive build folder
        shell: bash
        run: |
          cd dist
          7z a MPPT-App-win.zip "MPPT-App/*"

      - name: Upload artifact (workflow)
        uses: actions/upload-artifact@v4
        with:
          name: MPPT-App-win
          path: dist/MPPT-App-win.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/MPPT-App-win.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build macOS DMG
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Build macOS app bundle
        shell: bash
        run: |
          pyinstaller --noconfirm mppt.spec
          test -d "dist/MPPT-App.app" || (echo "App bundle not found" && ls -la dist && exit 1)

      - name: Create DMG
        shell: bash
        run: |
          mkdir -p dist/dmg
          cp -R "dist/MPPT-App.app" "dist/dmg/MPPT-App.app"
          hdiutil create -volname "MPPT-App" -srcfolder "dist/dmg" -ov -format UDZO "dist/MPPT-App-mac.dmg"
          ls -lh dist

      - name: Upload artifact (workflow)
        uses: actions/upload-artifact@v4
        with:
          name: MPPT-App-mac
          path: dist/MPPT-App-mac.dmg

      - name: Attach DMG to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/MPPT-App-mac.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
